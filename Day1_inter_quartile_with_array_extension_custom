#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    void arrange(int a,double arr[]);
    void make_array(int a, int sum, double X[],int Y[], double N[]);
    int a,i;
    scanf("%i",&a);

    double X[a];
    int Y[a];
    int sum=0.0;
    
    for (i=0;i<a;i++)
    scanf("%lf",&X[i]);

    for (i=0;i<a;i++)
    scanf("%i",&Y[i]);

    for (i=0;i<a;i++)
    {
        sum=sum+Y[i];
    }
    double Z[sum];
    double arr1[sum/2],arr2[sum/2];
    for (i=0;i<sum;i++)
    Z[i]=0;
    make_array(a,sum,X,Y,Z);
    arrange(sum,Z);
    // breaking the array into two pieces
       if (sum%2==0)
   {
   for (i=0;i<sum/2;i++)
   arr1[i]=Z[i];

   for (i=sum/2;i<sum;i++)
   arr2[i-sum/2]=Z[i];
   }
   else 
   {
       for (i=0;i<sum/2;i++)
       arr1[i]=Z[i];
       for (i=sum/2+1;i<sum;i++)
       arr2[i-(sum/2+1)]=Z[i];
   }
    void find_inter_quartile(int a,double arr[],double arr1[],double arr2[]);
    find_inter_quartile(sum,Z,arr1,arr2);

    return 0;
}
void make_array(int a, int sum,double X[],int Y[], double N[])
{
    int i,j,k,flag;
    int var,nsum;
    var=0;
    nsum=0;
    flag=0;
    for (i=0;i<sum;i++)
    { 
        if (flag==0)
        nsum=nsum+Y[var];
        
        N[i]=X[var];

        if (i>=nsum-1)
        {
            var=var+1;
            flag=0;
        }
        else
        flag=1;
    }
}
void arrange(int a,double arr[])
{
    int i,j;
    double chec;
    for (i=0;i<a;i++)
    {
        for (j=i+1;j<a;j++)
        {
            if (arr[i]>arr[j])
            {
                chec=arr[i];
                arr[i]=arr[j];
                arr[j]=chec;
            }
        }
    }
}
void find_inter_quartile(int a,double arr[],double arr1[],double arr2[])
{
    double median(int b,double arr[]);
    double q1,q2,q3;
    
    q1=median(a/2,arr1);
    q2=median(a,arr);
    q3=median(a/2,arr2);
    
    printf("%.1f\n",q3-q1);
}
double median(int b,double arr[])
{
    double med;
    if (b%2==0)
    {
        med=(arr[b/2]+arr[b/2-1])/2;
    }
    else
    med=arr[b/2];
    return med;
}
